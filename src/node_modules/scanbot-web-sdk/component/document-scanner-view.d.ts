import * as React from "preact";
import { DocumentOutline } from "./view/document-outline";
import { ScanbotCameraState, ShutterButtonAction } from "./model/scanbot-camera-state";
import { ScanbotCameraProps } from "./model/scanbot-camera-props";
import { DocumentScannerConfiguration } from "./model/document-scanner-configuration";
import { WorkerBridge } from "./worker/worker-bridge";
import { ScanbotCameraView } from "./view/scanbot-camera-view";
import { ShutterButton } from "./view/ShutterButton";
export default class DocumentScannerView extends React.Component<ScanbotCameraProps, ScanbotCameraState> {
    static DEFAULT_DETECTION_RESOLUTION: number;
    outline: DocumentOutline | null;
    camera: ScanbotCameraView | null;
    button: ShutterButton | null;
    autoCaptureToken: any;
    disposed?: boolean;
    constructor(props: ScanbotCameraProps);
    get defaultAction(): ShutterButtonAction;
    get enabled(): boolean;
    get autoCaptureEnabled(): boolean;
    get configuration(): DocumentScannerConfiguration;
    get bridge(): WorkerBridge;
    static isSupported(): boolean;
    /**
     * Public API functions
     */
    static create(configuration: DocumentScannerConfiguration, bridge: WorkerBridge): Promise<DocumentScannerView>;
    dispose(): void;
    detectAndCrop(): Promise<any>;
    /**
     * Internal functions
     */
    componentDidMount(): void;
    componentWillUnmount(): void;
    detect(): Promise<void>;
    getStatusString(detectionResult: any): any;
    detectInWebWorker(): Promise<any>;
    handleAutoCapture(statusOk: boolean): Promise<void>;
    updateButton(action: ShutterButtonAction): void;
    render(): React.JSX.Element;
    onVideoReady: () => void;
    onVideoError: (err: Error) => void;
    defaultCaptureButtonClick: () => Promise<void>;
}
